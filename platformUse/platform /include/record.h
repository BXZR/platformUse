#ifndef __record_H__    //意思是  "if not define __XXX_H__" 也就是没包含XXX.h
#define __record_H__   //就定义__XXX_H__


//这个文件记录所有的协议信息
#include <iostream>
#include <string.h>
using namespace std;//其实并不需要引用，只是在调试的时候用一下

class record
{
   
  public:
  const static int commandCount ;
  const static  string commandKinds [] ;
};

 int const record:: commandCount = 10;
 string const record:: commandKinds[]  = {"1000" , "1001" ,"1002" , "1003" , "2000" ,"2001" , "2002" , "2003" , "3000" , "3001"}; 

#endif

/*
一． Zigbee设备
Zigbee设备分为终端节点和协调器节点。需要实现的功能如下：
1. 心跳：终端向协调器发送。
数据包命令字段：1000
数据字段1：设备ID
数据字段2：企业ID
数据字段3：部门ID

2. 数据采集：终端向协调器发送。
数据包命令字段：1001
数据字段1：设备ID
数据字段2：数据类型(温湿度等)
数据字段3：采集的数据(整数浮点数均可)

3. 控制继电器：协调器控制终端的继电器
数据包命令字段：1002
数据字段1：设备ID(受控方)
数据字段2：开关标记

4. 控制采集频率：协调器控制采集节点的采集频率
数据包命令字段：1003
数据字段1：设备ID(受控方)
数据字段2：频率

二． 汇聚节点和服务器的通信
通讯双方为汇聚节点和服务器。
1. 转发采集数据：汇聚节点发给服务器
数据包命令字段：2000
数据字段1：汇聚节点设备ID
数据字段2：Zigbee终端设备ID
数据字段3：数据类型(温湿度等)
数据字段4：采集的数据(整数浮点数均可)

2. 身份确认：汇聚节点发送给服务器
数据包命令字段：2001
数据字段1：汇聚节点设备ID
数据字段2：企业ID
数据字段3：部门ID

3. 控制继电器：服务器发送给汇聚节点
数据包命令字段：2002
数据字段1：汇聚节点设备ID
数据字段2：继电器所在设备ID
数据字段3：开关标记

4. 控制采集频率：服务器发送给汇聚节点
数据包命令字段：2003
数据字段1：汇聚节点设备ID
数据字段2：采集节点设备ID
数据字段3：频率

三． WebServer和服务器通信
1. 增加设备：webServer发送给服务器
数据包命令字段：3000
数据字段1：增添的设备ID
数据字段2：设备类型(Zigbee、汇聚节点或其他)
数据字段3：企业ID
数据字段4：部门ID

2. 删除设备：webServer发送给服务器
数据包命令字段：3001
数据字段1：删除的设备ID
数据字段2：设备类型
*/
